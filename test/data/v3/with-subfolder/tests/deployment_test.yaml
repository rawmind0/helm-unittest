suite: test deployment
templates:
  - db/deployment.yaml
  - webserver/deployment.yaml
tests:
  - it: should pass all kinds of assertion for both deployments
    values:
      - ./values/image.yaml
    asserts:
      - equal:
          path: spec.template.spec.containers[0].image
          value: apache:latest
      - notEqual:
          path: spec.template.spec.containers[0].image
          value: nginx:stable
      - matchRegex:
          path: metadata.name
          pattern: ^.*-subfolder.*$
      - notMatchRegex:
          path: metadata.name
          pattern: ^.*-foobar$
      - isNull:
          path: spec.template.nodeSelector
      - isNotNull:
          path: spec.template
      - isEmpty:
          path: spec.template.spec.containers[0].resources
      - isNotEmpty:
          path: spec.template.spec.containers[0]
      - isKind:
          of: Deployment
      - isAPIVersion:
          of: extensions/v1beta1
      - hasDocuments:
          count: 1
      - matchSnapshot:
          path: spec
  - it: should pass all kinds of assertion for webserver deployment
    values:
      - ./values/image.yaml
    template: webserver/deployment.yaml
    set:
      service.internalPort: 8080
    asserts:
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            containerPort: 8080
      - notContains:
          path: spec.template.spec.containers[0].ports
          content:
            containerPort: 80
  - it: should pass all kinds of assertion for db deployment
    values:
      - ./values/image.yaml
    template: db/deployment.yaml
    set:
      service.dbPort: 8080
    asserts:
      - contains:
          path: spec.template.spec.containers[0].ports
          content:
            containerPort: 8080
      - notContains:
          path: spec.template.spec.containers[0].ports
          content:
            containerPort: 80
